/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package VistaNegocio;

import Controlador.Conexion;
import Controlador.ControllerSql;
import Modelo.Cliente;
import Modelo.Funciones;
import java.awt.Desktop;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.IOException;
import java.net.URL;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author negro
 */
public class VistaCliente extends javax.swing.JFrame {

    ControllerSql obj;
    CallableStatement cts;
    Connection cn;
    ResultSet r;
    boolean editar = false;
    int valCedula;

    /**
     * Creates new form VistaClientes
     */
    public VistaCliente() {
        initComponents();

        ValidadSoloNumeros(txtIdCliente);
        ValidadCaracteres(txt_nombre_cliente);
        ValidadCaracteres(txtDireccion);
        ValidadSoloNumeros(txtTelefono);

        cn = Conexion.getConn();
        cargar();

    }

    public void cargar() {

        DefaultTableModel tabla = new DefaultTableModel();
        PreparedStatement ps;
        try {
            tabla.addColumn("id_cliente");
            tabla.addColumn("nom_cliente");
            tabla.addColumn("dir_cliente");
            tabla.addColumn("tel_cliente");
//         cts=cn.prepareCall("{call listacliente}");
//        
//       r=cts.executeQuery();
//        System.out.println(r);

            ps = cn.prepareStatement("SELECT id_cliente ,nom_cliente ,dir_cliente,tel_cliente FROM cliente");
            r = ps.executeQuery();

            while (r.next()) {
                Object dato[] = new Object[4];
                for (int i = 0; i < 4; i++) {
                    dato[i] = r.getString(i + 1);
                    log(String.valueOf(dato[i]));
                }
                tabla.addRow(dato);
            }
            this.jTable1.setModel(tabla);

        } catch (Exception e) {
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txt_nombre_cliente = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtDireccion = new javax.swing.JTextField();
        btnGuardar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtTelefono = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtIdCliente = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        btnSelectEditar = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        txt_nombre_cliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_nombre_clienteActionPerformed(evt);
            }
        });

        jLabel2.setText("Nombre Cliente:");

        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/guardar.JPG"))); // NOI18N
        btnGuardar.setText("Guardar");
        btnGuardar.setBorder(null);
        btnGuardar.setBorderPainted(false);
        btnGuardar.setContentAreaFilled(false);
        btnGuardar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnGuardar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnGuardar.setIconTextGap(-3);
        btnGuardar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        btnGuardar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/Cancelar.JPG"))); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.setBorder(null);
        btnCancelar.setBorderPainted(false);
        btnCancelar.setContentAreaFilled(false);
        btnCancelar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCancelar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnCancelar.setIconTextGap(-3);
        btnCancelar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        btnCancelar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        jLabel1.setText("Direccion");

        jLabel3.setText("Telefono");

        jLabel4.setText("Identificacion");

        jButton1.setText("Reporte Clientes");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel5.setText("Buscar");

        jButton2.setText("Buscar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        btnSelectEditar.setText("Seleccionar");
        btnSelectEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectEditarActionPerformed(evt);
            }
        });

        jButton3.setText("Editar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(92, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 419, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))
                                .addGap(29, 29, 29)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txt_nombre_cliente, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE)
                                    .addComponent(txtDireccion)
                                    .addComponent(txtTelefono)
                                    .addComponent(txtIdCliente))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(jButton1))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(36, 36, 36)
                                        .addComponent(btnGuardar)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnCancelar))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(jLabel5)
                                .addGap(39, 39, 39)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(40, 40, 40)
                                .addComponent(jButton2)
                                .addGap(18, 18, 18)
                                .addComponent(jButton3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnSelectEditar)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(txtIdCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2)
                                    .addComponent(txt_nombre_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnCancelar)
                                .addGap(6, 6, 6)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton1))))
                    .addComponent(btnGuardar))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton2)
                        .addComponent(btnSelectEditar)
                        .addComponent(jButton3)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(145, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_nombre_clienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_nombre_clienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_nombre_clienteActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // TODO add your handling code here:
        if (ValidarCamposVacios(txtIdCliente, txt_nombre_cliente, txtDireccion, txtTelefono)) {
            JOptionPane.showMessageDialog(this, "Faltan datos en los campos.");

        } else {
            
            // TODO add your handling code here:
            int idCliente = Integer.parseInt(txtIdCliente.getText());
            String NombreCliente = txt_nombre_cliente.getText();
            String Direccion = txtDireccion.getText();
            String Telefono = txtTelefono.getText();

            try {
        
                
                obj = new ControllerSql();
               
                    
                     boolean  res = obj.AgregarCliente(idCliente, NombreCliente, Direccion, Telefono);
                      log("CREAR");
                    
                
                
                if (res == true) {
                    JOptionPane.showMessageDialog(null, "Usuario Registrado Correctamente");
                    this.dispose();
                } else {
                    JOptionPane.showMessageDialog(null, "No se pudo ingresar un nuevo Empleado ya existe en la base"
                            + "de datos");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "por favor verifique la conexion del servidor");

            }
        }
        
        
    }//GEN-LAST:event_btnGuardarActionPerformed


    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        VistaPrincipal retornar = new VistaPrincipal();
        retornar.setVisible(true);
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        // TODO add your handling code here:
        pdf();
        String jasper = "reporteclientes";
        ver(jasper);

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        log("a");
        String x = jTextField1.getText();
        log(String.valueOf(x));
        PreparedStatement ps;
        DefaultTableModel tabla = new DefaultTableModel();

        try {
            tabla.addColumn("id_cliente");
            tabla.addColumn("nom_cliente");
            tabla.addColumn("dir_cliente");
            tabla.addColumn("tel_cliente");
            cts = cn.prepareCall("{call filtraClienteId(?)}");
            cts.setString(1, x);
            r = cts.executeQuery();

//            ps = cn.prepareStatement("SELECT * FROM cliente WHERE idcliente like " + x + "");
//            ps.setString(1, x);
//            r = ps.executeQuery();
            while (r.next()) {
                Object dato[] = new Object[4];
                for (int i = 0; i < 4; i++) {
                    dato[i] = r.getString(i + 1);

                    log(String.valueOf(dato[i]));
                }
                tabla.addRow(dato);
            }
            this.jTable1.setModel(tabla);

        } catch (Exception e) {
        }

    }//GEN-LAST:event_jButton2ActionPerformed

    private void btnSelectEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectEditarActionPerformed
        // TODO add your handling code here:

        seleccionarfila(0);

    }//GEN-LAST:event_btnSelectEditarActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        editarCliente();
    }//GEN-LAST:event_jButton3ActionPerformed

    public boolean ValidarCamposVacios(JTextField... textFields) {
        for (JTextField textField : textFields) {
            if (textField.getText().isEmpty()) {
                return true;
            }
        }
        return false;
    }

    public void ValidadSoloNumeros(JTextField a) {
        a.addKeyListener(new KeyAdapter() {
            public void keyTyped(KeyEvent e) {
                Character ch = e.getKeyChar();
                if (!Character.isDigit(e.getKeyChar()) && (ch != KeyEvent.VK_BACK_SPACE) && (ch != '.')) {
         // if(((ch < '0') || (ch > '9')) && (ch != KeyEvent.VK_BACK_SPACE)&& (ch !='.')){ 

                    getToolkit().beep();
                    e.consume();;
                }
            }
        });
    }

    public void ValidadCaracteres(JTextField a) {
        a.addKeyListener(new KeyAdapter() {
            public void keyTyped(KeyEvent e) {
                Character ch = e.getKeyChar();
                if (Character.isDigit(e.getKeyChar())) {
         // if(((ch < '0') || (ch > '9')) && (ch != KeyEvent.VK_BACK_SPACE)&& (ch !='.')){ 

                    getToolkit().beep();
                    e.consume();;
                }

            }
        });
    }

    /**
     * Ver reporte
     */
    public void ver(String jasper) {
        JasperReport jasperReport;
        JasperPrint jasperPrint;
        Conexion database1 = new Conexion();
        try {
            URL in = this.getClass().getResource("reporteclientes.jasper");
            jasperReport = (JasperReport) JRLoader.loadObject(in);

            jasperPrint = JasperFillManager.fillReport(jasperReport, new HashMap(), database1.getConn());
            JasperViewer.viewReport(jasperPrint, false);
        } catch (JRException ex) {
            System.err.println("Error iReport: " + ex.getMessage());
        }
    }

    /**
     * Imprimir reporte
     */
    public void pdf() {

        Conexion database1 = new Conexion();
        JasperReport jasperReport;
        JasperPrint jasperPrint;
        try {
            //se carga el reporte
            URL in = this.getClass().getResource("reporteclientes.jasper");
            jasperReport = (JasperReport) JRLoader.loadObject(in);
            //se procesa el archivo jasper
            jasperPrint = JasperFillManager.fillReport(jasperReport, new HashMap(), database1.getConn());
            //se crea el archivo PDF
            JasperExportManager.exportReportToPdfFile(jasperPrint, "./reporteclientes.pdf");
          //Se ejecuta directamete PDF
//          Runtime.getRuntime().exec("rundll32 url.dll,FileProtocolHandler " + "/reporteclientes.pdf");

            try {
                Desktop desktop = Desktop.getDesktop();
                if (desktop.isSupported(Desktop.Action.OPEN)) {
                    desktop.open(new File("reporteclientes.pdf"));
                } else {
                    System.out.println("Open is not supported");
                }
            } catch (IOException exp) {
                exp.printStackTrace();
            }
        } catch (JRException ex) {
            System.err.println("Error iReport: " + ex.getMessage());
        }
    }

    public int seleccionarfila(int a) {

        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        int row = jTable1.getSelectedRow();
        //ahora obtenemos la fila selccionada
        int fila_select = jTable1.getSelectedRow();

        if (fila_select < 0) {
            // no se puede eliminar
            JOptionPane.showMessageDialog(this, "Tabla vacia o no ha seleccionado uan fila.");
        } else {
            // la eliminamos del modelo:
            //modelo.removeRow(fila_select);
            String idIdentificacion = jTable1.getValueAt(row, 0).toString();
            String nombre = jTable1.getValueAt(row, 1).toString();
            String direccion = jTable1.getValueAt(row, 2).toString();
            String telefono = jTable1.getValueAt(row, 3).toString();
            txtIdCliente.setText(idIdentificacion);
            txtIdCliente.setEnabled(false);
            txt_nombre_cliente.setText(nombre);
            txtDireccion.setText(direccion);
            txtTelefono.setText(telefono);
            btnSelectEditar.setText("Editar");
            a = 1;
            
        }
        
        log(String.valueOf(a));
        return a;
    }
    
 public void editarCliente()
 {
       // TODO add your handling code here:
        if (ValidarCamposVacios(txtIdCliente, txt_nombre_cliente, txtDireccion, txtTelefono)) {
            JOptionPane.showMessageDialog(this, "Faltan datos en los campos.");

        } else {
            
            // TODO add your handling code here:
            int idCliente = Integer.parseInt(txtIdCliente.getText());
            String NombreCliente = txt_nombre_cliente.getText();
            String Direccion = txtDireccion.getText();
            String Telefono = txtTelefono.getText();

            try {
        
                
                obj = new ControllerSql();
               
                   
                      boolean res = obj.actualizaCliente(idCliente,NombreCliente, Direccion, Telefono);
                        log("EDITAR");
                  
                
                
                if (res == true) {
                    JOptionPane.showMessageDialog(null, "Usuario Registrado Correctamente");
                    this.dispose();
                } else {
                    JOptionPane.showMessageDialog(null, "No se pudo ingresar un nuevo Empleado ya existe en la base"
                            + "de datos");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "por favor verifique la conexion del servidor");

            }
        }
        
     
 }
    public void log(String a) {
        System.out.println("la valor  = " + " " + a);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnSelectEditar;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JTextField txtIdCliente;
    private javax.swing.JTextField txtTelefono;
    private javax.swing.JTextField txt_nombre_cliente;
    // End of variables declaration//GEN-END:variables
}
